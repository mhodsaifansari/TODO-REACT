{"version":3,"sources":["component/InputGroup.js","component/TodoComp.js","component/TImeComp.js","App.js","reportWebVitals.js","index.js"],"names":["InputGroup","props","state","value","addToList","this","addHandler","undefined","setState","className","onSubmit","event","preventDefault","type","onClick","placeholder","onChange","target","Component","TodoComp","selectHandler","myref","current","inital","console","log","focus","select","eventHandler","comment","edit","editTitle","title","React","createRef","doneHandler","id","removeHandler","editHandler","edittitle","e","style","marginRight","marginLeft","time","marginTop","edit_comment","ref","resize","fontSize","cursor","parentElement","classList","add","onanimationend","TImeComp","Date","toLocaleString","current_time","setInterval","new_time","App","list_value","list_todo","todo","push","key","localStorage","setItem","JSON","stringify","new_list","filter","done","listitems","data","find","index","findIndex","splice","getItem","listItem","parse","reverse","map","task","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6ea1b41.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass InputGroup extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             value:''\r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        const addToList=this.props.addToList;\r\n        const addHandler= ()=>\r\n        {\r\n            if(this.state.value!==null||this.state.value!==undefined||this.state.value!=='')\r\n                {   addToList(this.state.value)\r\n\r\n                \r\n                }\r\n        this.setState({value:''})\r\n        }\r\n       \r\n        return (\r\n            <div className=\"input-group\">\r\n                <form onSubmit={(event)=>{addHandler();event.preventDefault()}} className=\"input-form\">\r\n                <input type=\"reset\" className=\"btn btn-clear\" value=\"Clear\" onClick={()=>{this.setState({value:''})}} ></input>\r\n                <input type=\"text\" className=\"input-text\"placeholder=\"I will....\" onChange={(event)=>{this.setState({value :event.target.value}) } } value={this.state.value}></input>    \r\n                <input type=\"submit\" className=\"btn btn-add\"onClick={addHandler} value=\"Enter\" ></input>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputGroup\r\n","\r\n\r\nimport React, { Component } from 'react'\r\n\r\n class TodoComp extends Component {\r\n     constructor(props) {\r\n         super(props)\r\n     \r\n         this.state = {\r\n              edit:0,\r\n              comment:'Add a Comment',\r\n              editTitle:0,\r\n              title:this.props.value\r\n              \r\n         }\r\n         this.myref=React.createRef();\r\n         this.inital=0;\r\n         \r\n     }\r\n    selectHandler=()=>{\r\n        if(this.myref.current!=null&&this.inital===0)\r\n        { console.log(this.myref.current)\r\n        this.myref.current.focus();\r\n        this.myref.current.select();\r\n        this.inital=1;\r\n        }\r\n    }\r\n    eventHandler=(event)=>{\r\n        this.setState({comment:event.target.value})\r\n    }\r\n    componentDidUpdate()\r\n    {this.selectHandler()}\r\n    render() \r\n     {\r\n        const toggle=()=>{\r\n            if(this.state.edit===0)\r\n            {this.setState({edit:1});\r\n            }\r\n            else\r\n            {\r\n                this.setState({edit:0});\r\n            }\r\n           };\r\n    \r\n        \r\n       const {doneHandler,id,removeHandler,editHandler} = this.props;\r\n       \r\n       let edittitle=(<div>\r\n                         <input type=\"text\" value={this.state.title} onChange={(e)=>{this.setState({title:e.target.value})}} ></input>\r\n                         <button onClick={()=>{editHandler(id,this.state.title); this.setState({editTitle:0})}} className=\"todo-btn \" style={{marginRight:\"0.2rem\",marginLeft:'0.5rem'}}>Save</button>\r\n                         <button onClick={()=>{this.setState({editTitle:0})}} className=\"todo-btn\" style={{marginRight:\"0.5rem\"}}> Close</button>\r\n                         </div>)\r\n       let comment=(<div className=\"comment-box\">\r\n                        <pre className=\"comment\">{this.state.comment}</pre>\r\n                        <div className=\"comment-time\">\r\n                           <span>{this.props.time}</span>  \r\n                           <button onClick={()=>{this.setState({edit:2});}} className=\"todo-btn\" style={{marginTop:\"0.5rem\"}}>Edit</button>\r\n                        </div>\r\n                        \r\n                       \r\n                    </div>);\r\n       let edit_comment=(<div className='edit-comment'>\r\n                 <textarea ref={this.myref} placeholder='Enter Comment' style={{resize:\"none\"}} value={this.state.comment} onChange={this.eventHandler} />\r\n                 <button onClick={()=>{this.setState({edit:1})}}>Save</button>\r\n\r\n             </div>)\r\n        this.selectHandler();\r\n        return (\r\n\r\n            <>\r\n            <div className=\"todo-box\">\r\n                <div className=\"todo-box-top\">\r\n                    <span>\r\n                        {this.state.editTitle===0?<>{this.state.title}<sup style={{fontSize:\"0.51rem\",marginLeft:\"0.4rem\",cursor:\"pointer\"}} onClick={()=>{this.setState({editTitle:1}) }}>edit</sup></>\r\n                        :\r\n                        edittitle}\r\n                        \r\n                    </span>\r\n                    <span onClick={toggle} style={{fontSize:\"0.71rem\",cursor:\"pointer\"}}>{this.state.edit===0?\"More\":\"Less\"}</span>\r\n                </div>\r\n                \r\n                {this.state.edit===0?\r\n                    '':\r\n                        this.state.edit===1?\r\n                            comment:\r\n                            edit_comment\r\n                            \r\n                    }\r\n                \r\n                <div>\r\n                    <button onClick={(event)=>{\r\n                    // event.target.addClass('todo-box-shirk'); \r\n                    //\r\n                    \r\n                    \r\n                    event.target.parentElement.parentElement.classList.add('todo-box-shrink-remove');\r\n                    event.target.parentElement.parentElement.onanimationend=()=>{removeHandler(id)};\r\n                   console.log()\r\n                    }} className=\"todo-btn todo-btn-remove\">Remove</button>\r\n                    <button onClick={(event)=>{\r\n                    // event.target.addClass('todo-box-shirk'); \r\n                    //\r\n                    \r\n                    \r\n                    event.target.parentElement.parentElement.classList.add('todo-box-shrink-done');\r\n                    event.target.parentElement.parentElement.onanimationend=()=>{doneHandler(id)};\r\n                   console.log()\r\n                    }} className=\"todo-btn todo-btn-done\">Done</button>\r\n                </div>  \r\n              </div>\r\n              \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoComp\r\n","import React, { Component } from 'react'\r\n\r\nclass TImeComp extends Component {\r\n constructor(props) {\r\n     super(props)\r\n     this.time=new Date().toLocaleString();\r\n     this.state = {\r\n        current_time:this.time \r\n     }\r\n     setInterval(()=>{\r\n        let new_time=new Date().toLocaleString();\r\n        this.setState({current_time:new_time})},1000);\r\n\r\n }\r\n   \r\n    render() {\r\n    \r\n        return (\r\n            <>\r\n                <span>{this.state.current_time}</span>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TImeComp\r\n","\nimport './App.css';\nimport InputGroup from './component/InputGroup';\nimport React, { Component } from 'react'\nimport TodoComponent from './component/TodoComp';\nimport TImeComp from './component/TImeComp';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       todo:[],\n       done:0,\n       key:0\n    }\n\n  }\n  addToList=(list_value)=>\n            { if(list_value!=='')\n              {\n              let list_todo=this.state.todo;\n              list_todo.push({value:list_value,key:this.state.key,time: (new Date()).toLocaleString()});\n              console.log(list_todo);\n              this.setState({todo:list_todo,key:this.state.key+1})\n              }\n              localStorage.setItem('listItem',JSON.stringify(this.state));\n              }\n  doneHandler=(key)=>{\n                        let new_list=this.state.todo.filter((value)=>{return value.key!==key})\n                        this.setState({todo:new_list,done:this.state.done+1})\n                        localStorage.setItem('listItem',JSON.stringify(this.state));\n                      }\n  removeHandler=(key)=>{\n                      let new_list=this.state.todo.filter((value)=>{return value.key!==key})\n                        this.setState({todo:new_list})\n                        localStorage.setItem('listItem',JSON.stringify(this.state));\n                      }\n  editHandler=(key,value)=>{\n                        let listitems=this.state.todo;\n                        let data=listitems.find((value)=>{return value.key===key});\n                        data.value=value;\n                        let index=listitems.findIndex((value)=>{return value.key===key});\n                        listitems.splice(index,1,data);\n                        this.setState({todo:listitems});\n                      }\n  componentDidMount()\n  {\n    if(localStorage.getItem('listItem')!==undefined)\n    { let listItem='';\n      try\n      {\n        listItem=JSON.parse(localStorage.getItem('listItem'));\n        this.setState(listItem);\n      }\n      catch\n      {\n        console.log('error in parsing LocalStorage');\n      }\n    }\n  }\n  render() {\n    const list_todo=this.state.todo.reverse().map((task)=>{return(<TodoComponent value={task.value} key={task.key} doneHandler={this.doneHandler} id={task.key} removeHandler={this.removeHandler} time={task.time} editHandler={this.editHandler}></TodoComponent>)})\n    return (\n      <div className=\"App\">\n      <div className=\"nav\">\n        <h2>Todo List</h2>\n        <span>\n          <div>Date: <TImeComp/></div>\n          <div>Done {this.state.done}</div>\n        </span>\n      </div>\n      <div className=\"pre\">\n      <div className=\"main\">\n        \n        <InputGroup addToList={this.addToList}/>\n        <div className=\"list\">\n          {list_todo}\n        </div>\n      </div>\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}